{"ast":null,"code":"import _classCallCheck from \"/Users/clement/web/chat-ws/chat/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/clement/web/chat-ws/chat/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/clement/web/chat-ws/chat/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/clement/web/chat-ws/chat/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/clement/web/chat-ws/chat/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/clement/web/chat-ws/chat/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/clement/web/chat-ws/chat/src/components/Chat.js\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  background-color: #424242;\\n  color: #fff;\\n  width: 100%;\\n  height: 150px;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  flex-grow: 1;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100vw;\\n  height: 100vh;\\n  background: #424242;\\n  display: flex;\\n  justify-content: center;\\n  font-size: 16px;\\n  color: #fff;\\n  font-family: Arial, sans-serif;\\n\\n  & > * {\\n    padding: 10px;\\n    border: 3px solid #fff;\\n    border-radius: 3px;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nvar Wrapper = styled.div(_templateObject());\nvar Messages = styled.div(_templateObject2());\nvar Input = styled.input(_templateObject3());\n\nvar Chat =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Chat, _React$Component);\n\n  function Chat() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Chat)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      status: 'Disconnected',\n      messages: [],\n      message: '',\n      userName: '',\n      userColor: ''\n    };\n\n    _this.handleInputChange = function (e) {\n      _this.setState({\n        message: e.target.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          userName = _this$state.userName,\n          userColor = _this$state.userColor,\n          message = _this$state.message,\n          messages = _this$state.messages,\n          status = _this$state.status;\n      return React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Messages, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(Input, {\n        type: \"text\",\n        value: message,\n        onChange: function onChange(e) {\n          return _this2.handleInputChange(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Chat;\n}(React.Component);\n\nexport default Chat;","map":{"version":3,"sources":["/Users/clement/web/chat-ws/chat/src/components/Chat.js"],"names":["React","styled","Wrapper","div","Messages","Input","input","Chat","state","status","messages","message","userName","userColor","handleInputChange","e","setState","target","value","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,OAAO,GAAGD,MAAM,CAACE,GAAV,mBAAb;AAiBA,IAAMC,QAAQ,GAAGH,MAAM,CAACE,GAAV,oBAAd;AAIA,IAAME,KAAK,GAAGJ,MAAM,CAACK,KAAV,oBAAX;;IAOMC,I;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,MAAM,EAAE,cADF;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,OAAO,EAAE,EAHH;AAINC,MAAAA,QAAQ,EAAE,EAJJ;AAKNC,MAAAA,SAAS,EAAE;AALL,K;;UAQRC,iB,GAAoB,UAAAC,CAAC,EAAI;AACvB,YAAKC,QAAL,CAAc;AAAEL,QAAAA,OAAO,EAAEI,CAAC,CAACE,MAAF,CAASC;AAApB,OAAd;AACD,K;;;;;;;6BAEQ;AAAA;;AAAA,wBACoD,KAAKV,KADzD;AAAA,UACCI,QADD,eACCA,QADD;AAAA,UACWC,SADX,eACWA,SADX;AAAA,UACsBF,OADtB,eACsBA,OADtB;AAAA,UAC+BD,QAD/B,eAC+BA,QAD/B;AAAA,UACyCD,MADzC,eACyCA,MADzC;AAEP,aACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEE,OAA1B;AAAmC,QAAA,QAAQ,EAAE,kBAAAI,CAAC;AAAA,iBAAI,MAAI,CAACD,iBAAL,CAAuBC,CAAvB,CAAJ;AAAA,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;;EArBgBf,KAAK,CAACmB,S;;AAwBzB,eAAeZ,IAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: #424242;\n  display: flex;\n  justify-content: center;\n  font-size: 16px;\n  color: #fff;\n  font-family: Arial, sans-serif;\n\n  & > * {\n    padding: 10px;\n    border: 3px solid #fff;\n    border-radius: 3px;\n  }\n`\n\nconst Messages = styled.div`\n  flex-grow: 1;\n`\n\nconst Input = styled.input`\n  background-color: #424242;\n  color: #fff;\n  width: 100%;\n  height: 150px;\n`\n\nclass Chat extends React.Component {\n  state = {\n    status: 'Disconnected',\n    messages: [],\n    message: '',\n    userName: '',\n    userColor: '',\n  }\n\n  handleInputChange = e => {\n    this.setState({ message: e.target.value })\n  }\n\n  render() {\n    const { userName, userColor, message, messages, status } = this.state\n    return (\n      <Wrapper>\n        <Messages />\n        <Input type=\"text\" value={message} onChange={e => this.handleInputChange(e)} />\n      </Wrapper>\n    )\n  }\n}\n\nexport default Chat\n"]},"metadata":{},"sourceType":"module"}