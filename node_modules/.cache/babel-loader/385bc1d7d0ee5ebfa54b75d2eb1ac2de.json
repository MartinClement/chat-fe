{"ast":null,"code":"import _defineProperty from \"/Users/clement/web/chat-ws/chat/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/clement/web/chat-ws/chat/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/clement/web/chat-ws/chat/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/clement/web/chat-ws/chat/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/clement/web/chat-ws/chat/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/clement/web/chat-ws/chat/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/clement/web/chat-ws/chat/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/clement/web/chat-ws/chat/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/clement/web/chat-ws/chat/src/components/Chat.js\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  background-color: #424242;\\n  color: #fff;\\n  width: 100%;\\n  height: 40px;\\n  box-sizing: border-box;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  flex-grow: 1;\\n  position: relative;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    color: \", \"\\n    font-weight: 600;\\n    font-size: 18px;\\n    position: absolute;\\n    bottom: 10px;\\n    left: 10px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100vw;\\n  height: 100vh;\\n  background: #424242;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  font-size: 16px;\\n  color: #fff;\\n  font-family: Arial, sans-serif;\\n\\n  & > * {\\n    padding: 10px;\\n    border: 3px solid #fff;\\n    border-radius: 3px;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nvar Wrapper = styled.div(_templateObject());\nvar Status = styled.div(_templateObject2(), function (p) {\n  return p.status === 'disconnected' ? 'red' : p.status === 'connecting' ? 'orange' : 'green';\n});\nvar Messages = styled.div(_templateObject3());\nvar Input = styled.input(_templateObject4());\n\nvar Chat =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Chat, _React$Component);\n\n  function Chat() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Chat)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this._connection = null;\n    _this._input = React.createRef();\n    _this.state = {\n      status: 'connecting',\n      error: '',\n      history: [],\n      message: '',\n      name: null,\n      color: ''\n    };\n\n    _this.componentWillMount = function () {\n      var connection = _this.props.connection;\n      _this._connection = connection;\n      _this._connection.onopen = _this.handleConnectionOpen;\n      _this._connection.onerror = _this.handleConnectionError;\n      _this._connection.onmessage = _this.handleConnectionMessage;\n    };\n\n    _this.handleSubmit = function (e) {\n      var v = e.target.value;\n      var name = _this.state.name;\n\n      if (v !== '') {\n        _this._connection.send(v);\n\n        if (!name) {\n          _this.setState({\n            name: v,\n            message: ''\n          });\n        }\n      }\n    };\n\n    _this.handleConnectionOpen = function () {\n      console.log('connection opened');\n\n      _this.setState({\n        status: 'connected'\n      });\n    };\n\n    _this.handleConnectionError = function (err) {\n      console.log('connection error', err);\n\n      _this.setState({\n        status: 'disconnected',\n        error: 'Connection failed'\n      });\n    };\n\n    _this.handleConnectionMessage = function (msg) {\n      try {\n        var json = JSON.parse(message.data);\n      } catch (e) {\n        console.log('Invalid JSON: ', message.data);\n        return;\n      }\n\n      _this.setState(function (prev) {\n        return _objectSpread({}, prev, _defineProperty({}, json.type, json.data));\n      });\n    };\n\n    _this.handleInputChange = function (e) {\n      _this.setState({\n        message: e.target.value\n      });\n    };\n\n    _this.handleSubmit = function () {};\n\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          name = _this$state.name,\n          color = _this$state.color,\n          message = _this$state.message,\n          messages = _this$state.messages,\n          status = _this$state.status,\n          error = _this$state.error;\n      return React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Messages, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Status, {\n        status: status,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, status, error !== '' && \" : \".concat(error))), React.createElement(Input, {\n        ref: this._input,\n        type: \"text\",\n        value: message,\n        onChange: function onChange(e) {\n          return _this2.handleInputChange(e);\n        },\n        placeholder: name === '' ? 'Enter your name' : 'Your Message ...',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Chat;\n}(React.Component);\n\nexport default Chat;","map":{"version":3,"sources":["/Users/clement/web/chat-ws/chat/src/components/Chat.js"],"names":["React","styled","Wrapper","div","Status","p","status","Messages","Input","input","Chat","_connection","_input","createRef","state","error","history","message","name","color","componentWillMount","connection","props","onopen","handleConnectionOpen","onerror","handleConnectionError","onmessage","handleConnectionMessage","handleSubmit","e","v","target","value","send","setState","console","log","err","msg","json","JSON","parse","data","prev","type","handleInputChange","messages","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: #424242;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  font-size: 16px;\n  color: #fff;\n  font-family: Arial, sans-serif;\n\n  & > * {\n    padding: 10px;\n    border: 3px solid #fff;\n    border-radius: 3px;\n  }\n`\n\nconst Status = styled.div`\n    color: ${p =>\n      p.status === 'disconnected' ? 'red' : p.status === 'connecting' ? 'orange' : 'green'}\n    font-weight: 600;\n    font-size: 18px;\n    position: absolute;\n    bottom: 10px;\n    left: 10px;\n`\n\nconst Messages = styled.div`\n  flex-grow: 1;\n  position: relative;\n`\n\nconst Input = styled.input`\n  background-color: #424242;\n  color: #fff;\n  width: 100%;\n  height: 40px;\n  box-sizing: border-box;\n`\nclass Chat extends React.Component {\n  _connection = null\n  _input = React.createRef()\n\n  state = {\n    status: 'connecting',\n    error: '',\n    history: [],\n    message: '',\n    name: null,\n    color: '',\n  }\n\n  componentWillMount = () => {\n    const { connection } = this.props\n    this._connection = connection\n    this._connection.onopen = this.handleConnectionOpen\n    this._connection.onerror = this.handleConnectionError\n    this._connection.onmessage = this.handleConnectionMessage\n  }\n\n  handleSubmit = e => {\n    const v = e.target.value\n    const { name } = this.state\n\n    if (v !== '') {\n      this._connection.send(v)\n\n      if (!name) {\n        this.setState({ name: v, message: '' })\n      }\n    }\n  }\n\n  handleConnectionOpen = () => {\n    console.log('connection opened')\n    this.setState({ status: 'connected' })\n  }\n\n  handleConnectionError = err => {\n    console.log('connection error', err)\n    this.setState({\n      status: 'disconnected',\n      error: 'Connection failed',\n    })\n  }\n\n  handleConnectionMessage = msg => {\n    try {\n      var json = JSON.parse(message.data)\n    } catch (e) {\n      console.log('Invalid JSON: ', message.data)\n      return\n    }\n\n    this.setState(prev => ({\n      ...prev,\n      [json.type]: json.data,\n    }))\n  }\n\n  handleInputChange = e => {\n    this.setState({ message: e.target.value })\n  }\n\n  handleSubmit = () => {}\n\n  render() {\n    const { name, color, message, messages, status, error } = this.state\n    return (\n      <Wrapper>\n        <Messages>\n          <Status status={status}>\n            {status}\n            {error !== '' && ` : ${error}`}\n          </Status>\n        </Messages>\n        <Input\n          ref={this._input}\n          type=\"text\"\n          value={message}\n          onChange={e => this.handleInputChange(e)}\n          placeholder={name === '' ? 'Enter your name' : 'Your Message ...'}\n        />\n      </Wrapper>\n    )\n  }\n}\n\nexport default Chat\n"]},"metadata":{},"sourceType":"module"}